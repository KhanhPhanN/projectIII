<!-- AIzaSyD8AkpdQ2LBirolGIl14FJ1fONPecm3DBE -->
<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Places Search Box</title>
    <link rel="stylesheet" href="/css/main.css" type="text/css" > 
</head>
  <body>
      <div id="symbol_place">
          <img id="gps" class="symbol_place" src="https://img.icons8.com/windows/2x/map-pin.png" height="30px" width="30px" onclick="drawMap()">
        <input id="location_s" type="text" placeholder="Nhập địa điểm">
        <input id="location" type="button" value="Search">
        <img id="restaurant" class="symbol_place" src="https://img.icons8.com/windows/2x/restaurant.png" height="30px" width="30px" onclick="search_restaurant()" >
        <img id="school" class="symbol_place" src="https://img.icons8.com/windows/2x/school-house.png" height="30px" width="30px" onclick="search_school()" >
        <img id="hospital" class="symbol_place" src="https://img.icons8.com/windows/2x/hospital-3.png" height="30px" width="30px" onclick="search_hospital()" >
       </div>
    <div id="map"></div>
    <div id="right-panel">
      <h2>Results</h2>
      <ul id="places"></ul>
      <button id="more">More results</button>
    </div>
    <script>  
      var myCenter;
      var place_name="Vị trí của bạn";
var place_search="restaurant";
function search_restaurant(){
  place_search="restaurant";
  document.getElementById('places').innerHTML="";
  initAutocomplete(myCenter);
}
function search_school(){
  place_search="school";
  document.getElementById('places').innerHTML="";
  initAutocomplete(myCenter);
}
function search_hospital(){
  place_search="hospital";
  document.getElementById('places').innerHTML="";
  initAutocomplete(myCenter);
}
var x_start;
var y_start;
function drawMap(){
  place_name="Vị trí của bạn";
  document.getElementById('places').innerHTML="";
  let options = {
    enableHighAccuracy: true,
    timeout: 5000,
    maximumAge: 0
  };
    let geolocation = navigator.geolocation;
    if (geolocation) {
      geolocation.getCurrentPosition(onGeoSuccess, onGeoError, options);
    } else {
      console.log("trinh duyệt của bạn không hỗ trợ Geolocation.");
    }

  function onGeoSuccess(position) {
    x_start = position.coords.latitude;
    y_start = position.coords.longitude;
    myCenter  = {lat: x_start, lng: y_start};
    initAutocomplete(myCenter);
  }
  
  function onGeoError(error) {
    let detailError;
    if(error.code === error.PERMISSION_DENIED) {
      detailError = "người dùng từ chối chia sẻ vị trí.";
    } 
    else if(error.code === error.POSITION_UNAVAILABLE) {
      detailError = "thông tin vị trí không khả dụng.";
    } 
    else if(error.code === error.TIMEOUT) {
      detailError = "yêu cầu đã hết thời gian ."
    } 
    else if(error.code === error.UNKNOWN_ERROR) {
      detailError = "lỗi không xác định."
    }
    alert(detailError)
  }
  
}
   //Change Place 
var input = document.getElementById('location_s');
 var s= document.getElementById('location');
         s.addEventListener('click',search)
       function search(){
        infowindow = new google.maps.InfoWindow();
        var request = {
          query: document.getElementById('location_s').value,
          fields: ['name', 'geometry'],
        };

        service = new google.maps.places.PlacesService(map);

        service.findPlaceFromQuery(request, function(results, status) {
          if (status === google.maps.places.PlacesServiceStatus.OK) {
          //alert(results.length);
            for (var i = 0; i < results.length; i++) {
              myCenter=results[0].geometry.location;
              place_name=results[0].name;
              initAutocomplete(myCenter);
              //createMarker(results[i]);
            }

 //           map.setCenter(results[0].geometry.location);
          }else{
            alert("Không tìm thấy vị trí");
            initAutocomplete(myCenter);
          }
        });
      }
      function createMarker(place) {
        var marker = new google.maps.Marker({
          map: map,
          position: place.geometry.location
        });

        google.maps.event.addListener(marker, 'click', function() {
          infowindow.setContent(place.name);
          infowindow.open(map, this);
        });
      }

//}
  function initAutocomplete(coordinates) {
    infowindow = new google.maps.InfoWindow();
        var map = new google.maps.Map(document.getElementById('map'), {
          center: coordinates,
          zoom: 13,
          mapTypeId: 'roadmap'
        });
        var marker_location=new google.maps.Marker({
                                    position: coordinates,
                                    // draggable: true,
                                    // animation:google.maps.Animation.BOUNCE,
                                    });
                    marker_location.setMap(map);
                    google.maps.event.addListener(marker_location, 'click', function() {
          infowindow.setContent(place_name);
          infowindow.open(map, this);
        });
  // Create the places service.
  var service = new google.maps.places.PlacesService(map);
  var getNextPage = null;
  var moreButton = document.getElementById('more');
  moreButton.onclick = function() {
    moreButton.disabled = true;
    if (getNextPage) getNextPage();
  };
  var around= new google.maps.Circle({
                center: coordinates,
                radius:1000,
                strokeColor:"#0000FF",
                strokeOpacity:0.8,
                strokeWeight:2,
                fillColor:"#9cc1fc",
                fillOpacity:0.4
              });
      around.setMap(map);
  // Perform a nearby search.
  service.nearbySearch(
      {location: coordinates, radius: 1000, type: [place_search]},
      function(results, status, pagination) {
        if (status !== 'OK') return;

        createMarkers(results);
        moreButton.disabled = !pagination.hasNextPage;
        getNextPage = pagination.hasNextPage && function() {
          pagination.nextPage();
        };
      });

  function createMarkers(places) {
  var bounds = new google.maps.LatLngBounds();
  var placesList = document.getElementById('places');

  for (var i = 0, place; place = places[i]; i++) {
    var image = {
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(25, 25)
    };

    var marker = new google.maps.Marker({
      map: map,
      icon: image,
      title: place.name,
      position: place.geometry.location
    });

    var li = document.createElement('li');
    li.textContent = place.name;
    placesList.appendChild(li);
    bounds.extend(place.geometry.location);
  }
  map.fitBounds(bounds);
}
  }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC_MbzpCBBPrMmvO4aLrc52vBXrsviNV6U&libraries=places&callback=drawMap"
         async defer></script>
  </body>
</html>
